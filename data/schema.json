{
  "global":{
    "environment":{
      "type":"string",
      "default":"production",
      "description":"Sets the \"deploy environment\" for all the app-related (for example RAILS_ENV in Rails) actions in the project (server, worker, etc.)"
    },
    "symlinks":{
      "type":"json",
      "default":{},
      "description":"List of symlinks created to the shared directory. The format is {\"shared_path\": \"release_path\"}. Any values for this parameter will be merged to the defaults."
    },
    "create_dirs_before_symlink":{
      "type":"json",
      "default": [],
      "description":"List of directories to be created before symlinking. Paths are relative to release_path. Any values for this parameter will be appended to the defaults."
    },
    "purge_before_symlink":{
      "type":"json",
      "default":[],
      "description":"List of directories to be wiped out before symlinking. Paths are relative to release_path. Any values for this parameter will be appended to the defaults."
    },
    "rollback_on_error":{
      "type":"boolean",
      "default":true,
      "description":"When set to true, any failed deploy will be removed from releases directory."
    },
    "logrotate_rotate":{
      "type":"integer",
      "default":30,
      "description":"The parameter is in days."
    }
  },
  "database":{
    "adapter":{
      "type":"string",
      "values":[
        "mariadb",
        "mysql",
        "postgresql",
        "sqlite3"
      ],
      "default":"sqlite3",
      "description":"ActiveRecord adapter which will be used for database connection."
    },
    "username":{
      "type":"string",
      "depends": [
        "mariadb",
        "mysql",
        "postgresql"
      ],
      "description":"Username used to authenticate to the DB."
    },
    "password":{
      "type":"string",
      "depends": [
        "mariadb",
        "mysql",
        "postgresql"
      ],
      "description":"Password used to authenticate to the DB."
    },
    "host":{
      "type":"string",
      "depends": [
        "mariadb",
        "mysql",
        "postgresql"
      ],
      "description":"Database host."
    },
    "database":{
      "type":"string",
      "description":"Database name."
    }
  },
  "scm":{
    "scm_provider":{
      "type":"string",
      "values":[
        "git"
      ],
      "default":"git",
      "description":"SCM used by the cookbook to clone the repo."
    },
    "remove_scm_files":{
      "type":"boolean",
      "default":true,
      "description":"If set to true, all SCM leftovers (like .git) will be removed."
    },
    "repository":{
      "type":"string",
      "description":"Repository URL."
    },
    "revision":{
      "type":"string",
      "description":"Branch name/SHA1 of commit which should be used as a base of the deployment."
    },
    "ssh_key":{
      "type":"text",
      "depends":[
        "git"
      ],
      "description":"A private SSH deploy key (the key itself, not the file name), used when fetching repositories via SSH."
    },
    "ssh_wrapper":{
      "type":"string",
      "default":"/tmp/ssh-git-wrapper.sh",
      "depends":[
        "git"
      ],
      "description":"A wrapper script, which will be used by git when fetching repository via SSH. Essentially, a value of GIT_SSH environment variable. This cookbook provides one of those scripts for you, so you shouldn't alter this variable unless you know what you're doing."
    },
    "enable_submodules":{
      "type":"boolean",
      "default":true,
      "depends":[
        "git"
      ],
      "description":"If set to true, any submodules included in the repository, will also be fetched."
    }
  },
  "framework":{
    "adapter":{
      "type":"string",
      "values":[
        "null",
        "hanami",
        "padrino",
        "rails"
      ],
      "default":"rails",
      "description":"Ruby framework used in project."
    },
    "migrate":{
      "type":"boolean",
      "default":true,
      "depends":[
        "hanami",
        "padrino",
        "rails"
      ],
      "description":"If set to true, migrations will be launched during deployment."
    },
    "migration_command":{
      "type":"string",
      "depends":[
        "hanami",
        "padrino",
        "rails"
      ],
      "description":"A command which will be invoked to perform migration. This cookbook comes with predefined migration commands, well suited for the task, and usually you don't have to change this parameter."
    },
    "assets_precompile":{
      "type":"boolean",
      "default":true,
      "depends":[
        "hanami",
        "padrino",
        "rails"
      ],
      "description":"If set to true, assets will be compiled during development."
    },
    "assets_precompilation_command":{
      "type":"string",
      "depends":[
        "hanami",
        "padrino",
        "rails"
      ],
      "description":"A command which will be invoked to precompile assets."
    },
    "envs_in_console":{
      "type":"boolean",
      "default":false,
      "depends":[
        "rails"
      ],
      "description":"If set to true, rails console will be invoked with all application-level environment variables set."
    }
  },
  "appserver":{
    "adapter":{
      "type":"string",
      "values":[
        "null",
        "puma",
        "thin",
        "unicorn"
      ],
      "default":"puma",
      "description":"Server on the application side, which will receive requests from webserver in front. null means no appserver enabled."
    },
    "application_yml":{
      "type":"boolean",
      "default":false,
      "depends":[
        "puma",
        "thin",
        "unicorn"
      ],
      "description":"Creates a config/application.yml file with all pre-configured environment variables. Useful for gems like figaro.",
      "url":"https://github.com/laserlemon/figaro"
    },
    "dot_env":{
      "type":"boolean",
      "default":false,
      "depends":[
        "puma",
        "thin",
        "unicorn"
      ],
      "description":"Creates a .env file with all pre-configured environment variables. Useful for gems like dotenv.",
      "url":"https://github.com/bkeepers/dotenv"
    },
    "backlog":{
      "type":"integer",
      "default":1024,
      "depends":[
        "unicorn"
      ],
      "description":"This is the backlog of the listen() syscall."
    },
    "delay":{
      "type":"float",
      "default":0.5,
      "depends":[
        "unicorn"
      ],
      "description":"Seconds to wait between successive tries."
    },
    "preload_app":{
      "type":"boolean",
      "default":true,
      "depends":[
        "puma",
        "unicorn"
      ],
      "description":"Enabling this preloads an application before forking worker processes."
    },
    "tcp_nodelay":{
      "type":"boolean",
      "default":true,
      "depends":[
        "unicorn"
      ],
      "description":"Disables Nagle's algorithm on TCP sockets if true."
    },
    "tcp_nopush":{
      "type":"boolean",
      "default":false,
      "depends":[
        "unicorn"
      ],
      "description":"Enables/disables TCP_CORK in Linux or TCP_NOPUSH in FreeBSD."
    },
    "tries":{
      "type":"integer",
      "default":5,
      "depends":[
        "unicorn"
      ],
      "description":"Times to retry binding a socket if it is already in use."
    },
    "timeout":{
      "type":"integer",
      "default":50,
      "depends":[
        "puma",
        "thin",
        "unicorn"
      ],
      "description":"Sets the timeout of worker processes to seconds."
    },
    "worker_processes":{
      "type":"integer",
      "default":4,
      "depends":[
        "puma",
        "thin",
        "unicorn"
      ],
      "description":"Sets the current number of worker processes. Each worker process will serve exactly one client at a time."
    },
    "log_requests":{
      "type":"boolean",
      "default":false,
      "depends":[
        "puma"
      ],
      "description":"Enable request logging."
    },
    "thread_max":{
      "type":"integer",
      "default":16,
      "depends":[
        "puma"
      ],
      "description":"Maximum number of threads to use to answer requests."
    },
    "threads_min":{
      "type":"integer",
      "default":0,
      "depends":[
        "puma"
      ],
      "description":"Minimum number of threads to use to answer requests."
    },
    "max_connections":{
      "type":"integer",
      "default":1024,
      "depends":[
        "thin"
      ],
      "description":"Maximum connections."
    },
    "max_persistent_connections":{
      "type":"integer",
      "default":512,
      "depends":[
        "thin"
      ],
      "description":"Maximum persistent connections."
    }
  },
  "webserver":{
    "adapter":{
      "type":"string",
      "values":[
        "null",
        "apache2",
        "nginx"
      ],
      "default":"nginx",
      "description":"Webserver in front of the instance. It runs on port 80, and receives all requests from Load Balancer/Internet. null means no webserver enabled."
    },
    "dhparams":{
      "type":"text",
      "depends":[
        "apache2",
        "nginx"
      ],
      "description":"If you wish to use custom generated DH primes, instead of common ones (which is a very good practice), put the contents (not file name) of the dhparams.pem file into this attribute.",
      "url":"https://weakdh.org/sysadmin.html"
    },
    "ssl_for_legacy_browsers":{
      "type":"boolean",
      "default":false,
      "depends":[
        "apache2",
        "nginx"
      ],
      "description":"By default webserver is configured to follow strict SSL security standards. However, old browsers (like IE < 9 or Android < 2.2) wouldn't work with this configuration very well. If your application needs a support for those browsers, set this parameter to true.",
      "url":"https://cipherli.st/"
    },
    "extra_config":{
      "type":"text",
      "depends":[
        "apache2",
        "nginx"
      ],
      "description":"Raw configuration, which will be inserted into \"<Virtualhost *:80>\" (apache) or \"server\" port 80 (nginx) section of the application."
    },
    "extra_config_ssl":{
      "type":"text",
      "depends":[
        "apache2",
        "nginx"
      ],
      "description":"Raw configuration, which will be inserted into \"<VirtualHost *:443>\" (apache) or \"server\" port 443 (nginx) section of the application. If set to true, the extra_config will be copied."
    },
    "keepalive_timeout":{
      "type":"integer",
      "default":15,
      "depends":[
        "apache2",
        "nginx"
      ],
      "description":"The number of seconds webserver will wait for a subsequent request before closing the connection."
    },
    "log_dir":{
      "type":"string",
      "depends":[
        "apache2",
        "nginx"
      ],
      "description":"A place to store application-related logs."
    },
    "limit_request_body":{
      "type":"integer",
      "default":1048576,
      "depends":[
        "apache2"
      ],
      "description":"This directive specifies the number of bytes from 0 (meaning unlimited) to 2147483647 (2GB) that are allowed in a request body.",
      "url":"https://httpd.apache.org/docs/2.4/mod/core.html#limitrequestbody"
    },
    "log_level":{
      "type":"string",
      "default":"info",
      "values":[
        "emerg",
        "alert",
        "crit",
        "error",
        "warn",
        "notice",
        "info",
        "debug",
        "trace1",
        "trace2",
        "trace3",
        "trace4",
        "trace5",
        "trace6",
        "trace7",
        "trace8"
      ],
      "depends":[
        "apache2"
      ],
      "description":"Adjusts the verbosity of the messages recorded in the error logs.",
      "url":"https://httpd.apache.org/docs/2.4/mod/core.html#loglevel"
    },
    "proxy_timeout":{
      "type":"integer",
      "default":60,
      "depends":[
        "apache2"
      ],
      "description":"This directive allows a user to specifiy a timeout on proxy requests.",
      "url":"https://httpd.apache.org/docs/current/mod/mod_proxy.html#proxytimeout"
    },
    "build_type":{
      "type":"string",
      "default":"default",
      "values":[
        "default",
        "source"
      ],
      "depends":[
        "nginx"
      ],
      "description":"The way the nginx cookbooks handles nginx installation.",
      "url":"https://github.com/miketheman/nginx/tree/2.7.x#recipes"
    },
    "client_body_timeout":{
      "type":"integer",
      "default":12,
      "depends":[
        "nginx"
      ],
      "description":"Defines a timeout for reading client request body.",
      "url":"http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_timeout"
    },
    "client_header_timeout":{
      "type":"integer",
      "default":12,
      "depends":[
        "nginx"
      ],
      "description":"Defines a timeout for reading client request header.",
      "url":"http://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_timeout"
    },
    "client_max_body_size":{
      "type":"string",
      "default":"10m",
      "depends":[
        "nginx"
      ],
      "description":"Sets the maximum allowed size of the client request body.",
      "url":"http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size"
    },
    "proxy_read_timeout":{
      "type":"integer",
      "default":60,
      "depends":[
        "nginx"
      ],
      "description":"Defines a timeout for reading a response from the proxied server.",
      "url":"http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout"
    },
    "proxy_send_timeout":{
      "type":"integer",
      "default":60,
      "depends":[
        "nginx"
      ],
      "description":"Sets a timeout for transmitting a request to the proxied server.",
      "url":"http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_send_timeout"
    },
    "send_timeout":{
      "type":"integer",
      "default":10,
      "depends":[
        "nginx"
      ],
      "description":"Sets a timeout for transmitting a response to the client.",
      "url":"http://nginx.org/en/docs/http/ngx_http_core_module.html#send_timeout"
    }
  },
  "worker":{
    "adapter":{
      "type":"string",
      "values":[
        "null",
        "delayed_job",
        "resque",
        "sidekiq"
      ],
      "default":"null",
      "description":"Worker used to perform background tasks. null means no worker enabled."
    },
    "process_count":{
      "type":"integer",
      "default":2,
      "depends":[
        "delayed_job",
        "resque",
        "sidekiq"
      ],
      "description":"How many separate worker processes will be launched."
    },
    "syslog":{
      "type":"boolean",
      "default":true,
      "depends":[
        "delayed_job",
        "resque",
        "sidekiq"
      ],
      "description":"Determines if worker should output to syslog."
    },
    "config":{
      "type":"json",
      "default":{},
      "depends":[
        "sidekiq"
      ],
      "description":"Configuration parameters which will be directly passed to the worker. Please use a valid JSON here.",
      "url":"https://github.com/mperham/sidekiq/wiki/Advanced-Options#the-sidekiq-configuration-file"
    },
    "queues":{
      "type":"string",
      "depends":[
        "delayed_job",
        "resque"
      ],
      "description":"Coma separated list of queues which should be processed by worker."
    },
    "workers":{
      "type":"integer",
      "default":2,
      "depends":[
        "resque"
      ],
      "description":"Number of resque workers."
    }
  }
}
